# Potential function 2D [DONE]

python visualisation/potential_function_2d.py -data commuter_ward -d 0.01178781925343811 -gmin -10 -gmax 0.5
python visualisation/potential_function_2d.py -data commuter_ward -d 0.01178781925343811 -gmin -10 -gmax 0.5 -cm sn


# R Squared analysis [DONE]

python inference/rsquared_analysis.py -data synthetic -d 0 -bmax 1400000 -n 100

python inference/rsquared_analysis.py -data retail -d 0 -n 1000
python inference/rsquared_analysis.py -data retail -d 0.006122448979591836 -n 1000

python inference/rsquared_analysis.py -data commuter_ward -d 0 -n 1000
python inference/rsquared_analysis.py -data commuter_ward -d 0.01178781925343811-n 1000
python inference/temp_rsquared.py -data commuter_ward -d 0.01178781925343811 -a 1.144 -b 56000

python inference/rsquared_analysis.py -data commuter_ward -d 0 -bmax 100000 -n 1000 -cm sn
python inference/rsquared_analysis.py -data commuter_ward -d 0.01178781925343811 -n 1000 -cm sn
python inference/temp_rsquared.py -data commuter_ward -d 0.01178781925343811 -a 1.122 -b 47600 -cm sn


# Laplace grid [DONE]

python inference/laplace_analysis.py -data synthetic -d 0.47619047619047616 -bmax 12 -g 100
python inference/laplace_analysis.py -data synthetic -d 0.47619047619047616 -bmax 12 -g 10000

python inference/laplace_analysis.py -data retail -d 0.006122448979591836 -g 100
python inference/laplace_analysis.py -data retail -d 0.006122448979591836 -g 10000

python inference/laplace_analysis.py -data commuter_ward -d 0.01178781925343811 -g 100
python inference/laplace_analysis.py -data commuter_ward -d 0.01178781925343811 -g 10000

python inference/laplace_analysis.py -data commuter_ward -d 0.01178781925343811 -cm sn -g 10000
python inference/laplace_analysis.py -data commuter_ward -d 0.01178781925343811 -cm sn -g 100



# HMC sampling [DONE]

python inference/hmc.py -data commuter_ward -d 0.01178781925343811 -a 0.5
python inference/hmc.py -data commuter_ward -d 0.01178781925343811 -a 1.0
python inference/hmc.py -data commuter_ward -d 0.01178781925343811 -a 1.5
python inference/hmc.py -data commuter_ward -d 0.01178781925343811 -a 2.0

python inference/hmc.py -data commuter_ward -d 0.01178781925343811 -a 0.5 -cm sn
python inference/hmc.py -data commuter_ward -d 0.01178781925343811 -a 1.0 -cm sn
python inference/hmc.py -data commuter_ward -d 0.01178781925343811 -a 1.5 -cm sn
python inference/hmc.py -data commuter_ward -d 0.01178781925343811 -a 2.0 -cm sn


# Optimise latent posterior [DONE]

python inference/optimise_latent_posterior.py -data retail -d 0.006122448979591836 -a 0.5
python inference/optimise_latent_posterior.py -data retail -d 0.006122448979591836 -a 1.0
python inference/optimise_latent_posterior.py -data retail -d 0.006122448979591836 -a 1.5
python inference/optimise_latent_posterior.py -data retail -d 0.006122448979591836 -a 2.0


python inference/optimise_latent_posterior.py -data commuter_ward -d 0.01178781925343811 -a 0.5
python inference/optimise_latent_posterior.py -data commuter_ward -d 0.01178781925343811 -a 1.0
python inference/optimise_latent_posterior.py -data commuter_ward -d 0.01178781925343811 -a 1.5
python inference/optimise_latent_posterior.py -data commuter_ward -d 0.01178781925343811 -a 2.0

python inference/optimise_latent_posterior.py -data commuter_ward -d 0.01178781925343811 -a 0.5 -cm sn
python inference/optimise_latent_posterior.py -data commuter_ward -d 0.01178781925343811 -a 1.0 -cm sn
python inference/optimise_latent_posterior.py -data commuter_ward -d 0.01178781925343811 -a 1.5 -cm sn
 python inference/optimise_latent_posterior.py -data commuter_ward -d 0.01178781925343811 -a 2.0 -cm sn


# Low noise MCMC sampling [DONE]
--True beta = 0.028571429, true alpha = 1.14 for bmax = 1.4e6
--True beta = , true alpha = 1.16 for bmax = 

python inference/mcmc_low_noise.py -data commuter_ward -d 0.01178781925343811 -t 0.04 -l # theta: 43-46% x: 96% 

python inference/mcmc_low_noise.py -data commuter_ward -d 0.01178781925343811 -t 0.04 -l -cm sn # theta: 37% x: 96%


# High noise MCMC sampling [DONE]


python inference/mcmc_high_noise.py -data retail -d 0.006122448979591836

python inference/mcmc_high_noise.py -data commuter_ward -d 0.01178781925343811 # theta: 37% x: 96% sign: 99%

python inference/mcmc_high_noise.py -data commuter_ward -d 0.01178781925343811 -cm sn # theta: 41% x: 96% sign: 98% 







RESULTS 


# Low noise R2 with informative cost matrix = 0.9513331985438995
# Low noise R2 with naive cost matrix = 0.9585629559004405

