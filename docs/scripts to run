# R Squared analysis [DONE]

python inference/rsquared_analysis.py -data synthetic -d 0 -bmax 1400000 -n 100
# python inference/rsquared_analysis.py -data synthetic -d 0.47619047619047616 -bmax 1400000 -n 100

python inference/rsquared_analysis.py -data retail -d 0 -bmax 1400000 -n 1000
python inference/rsquared_analysis.py -data retail -d 0.006122448979591836 -bmax 1400000 -n 1000

python inference/rsquared_analysis.py -data commuter_ward -d 0 -bmax 100000 -n 1000
python inference/rsquared_analysis.py -data commuter_ward -d 0.01178781925343811 -bmax 100000 -n 1000

python inference/rsquared_analysis.py -data commuter_ward -d 0 -bmax 100000 -n 1000 -cm sn
python inference/rsquared_analysis.py -data commuter_ward -d 0.01178781925343811 -bmax 100000 -n 1000 -cm sn


# Laplace grid

python inference/laplace_analysis.py -data synthetic -d 0.47619047619047616 -bmax 12 -g 100
python inference/laplace_analysis.py -data synthetic -d 0.47619047619047616 -bmax 12 -g 10000

python inference/laplace_analysis.py -data retail -d 0.006122448979591836 -bmax 1400000 -g 100
python inference/laplace_analysis.py -data retail -d 0.006122448979591836 -bmax 1400000 -g 10000

python inference/laplace_analysis.py -data commuter_ward -d 0.01178781925343811 -bmax 100000 -g 100
python inference/laplace_analysis.py -data commuter_ward -d 0.01178781925343811 -bmax 100000 -g 10000

# TORUN python inference/laplace_analysis.py -data commuter_ward -d 0.01178781925343811 -cm sn -bmax 100000 -g 10000
# TORUN python inference/laplace_analysis.py -data commuter_ward -d 0.01178781925343811 -cm sn -bmax 100000 -g 100



# Optimise latent posterior

python inference/optimise_latent_posterior.py -data retail -d 0.006122448979591836 -a 0.5 -b 210000 -g 10000
python inference/optimise_latent_posterior.py -data retail -d 0.006122448979591836 -a 1.0 -b 210000 -g 10000
python inference/optimise_latent_posterior.py -data retail -d 0.006122448979591836 -a 1.5 -b 210000 -g 10000
python inference/optimise_latent_posterior.py -data retail -d 0.006122448979591836 -a 2.0 -b 210000 -g 10000

python inference/optimise_latent_posterior.py -data commuter_ward -d 0.01178781925343811 -a 0.5 -b 210000 -g 10000
python inference/optimise_latent_posterior.py -data commuter_ward -d 0.01178781925343811 -a 1.0 -b 210000 -g 10000
python inference/optimise_latent_posterior.py -data commuter_ward -d 0.01178781925343811 -a 1.5 -b 210000 -g 10000
python inference/optimise_latent_posterior.py -data commuter_ward -d 0.01178781925343811 -a 2.0 -b 210000 -g 10000


# HMC sampling




# Low noise MCMC sampling

python inference/mcmc_low_noise.py -data synthetic -d 0.47619047619047616
# Trials
python inference/mcmc_low_noise.py -data synthetic -d 0.47619047619047616 -e 0.01 -L 200 -t 1
python inference/mcmc_low_noise.py -data retail -d 0.006122448979591836

## Commuter ward with naive cost matrix

### With informative initialisation
python inference/mcmc_low_noise.py -data commuter_ward -d 0.01178781925343811 -t 0.1 # theta: 24% x: >90%
python inference/mcmc_low_noise.py -data commuter_ward -d 0.01178781925343811 -t 0.05 # theta: 37-38% x: 96%
python inference/mcmc_low_noise.py -data commuter_ward -d 0.01178781925343811 -t 0.04 -l # theta: 43-46% x: 96% 
python inference/mcmc_low_noise.py -data commuter_ward -d 0.01178781925343811 -t 0.2 -l # theta: 37-38% x: 96% Ap changed to half
python inference/mcmc_low_noise.py -data commuter_ward -d 0.01178781925343811 -t 1 # theta: 2% x: 96% # init 1.16,0.18, b = 100000
python inference/mcmc_low_noise.py -data commuter_ward -d 0.01178781925343811 -t 0.1 # theta: 2% x: 96% # init 1.16,0.18, b = 100000


### With uninformative initialisation
python inference/mcmc_low_noise.py -data commuter_ward -d 0.01178781925343811 -t 0.04 # theta: 99% x: 96%  
python inference/mcmc_low_noise.py -data commuter_ward -d 0.01178781925343811 -t 0.1 # theta: 63-28% x: 97%  


## Commuter ward with informative cost matrix

### With informative initialisation
python inference/mcmc_low_noise.py -data commuter_ward -d 0.01178781925343811 -cm sn -t 0.04 -n 2  # theta: 40-37% x: 96%
python inference/mcmc_low_noise.py -data commuter_ward -d 0.01178781925343811 -cm sn -t 0.12 -n 2  # theta: 23% x: 96%
python inference/mcmc_low_noise.py -data commuter_ward -d 0.01178781925343811 -cm sn -t 0.01 -n 2  # theta: 23% x: 96%





# High noise MCMC sampling

python inference/mcmc_high_noise.py -data retail -d 0.006122448979591836

python inference/mcmc_high_noise.py -data commuter_ward -d 0.01178781925343811
# TORUN python inference/mcmc_high_noise.py -data commuter_ward -d 0.01178781925343811 # Initialise beta = 0.11507332679980924 alpha = 0.08566811795636758








